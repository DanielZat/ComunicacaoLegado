buildscript {
	ext {
		set('springBootVersion', '2.3.0.RELEASE')
		set('springCloudVersion', 'Hoxton.SR1')
		set('projectVersion', '1.0.0')
	}
}

plugins {
	id 'org.springframework.boot' version '2.6.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'com.diffplug.spotless' version '5.1.1'
}

dependencyManagement {
	applyMavenExclusions = false
	imports {
		mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
		mavenBom("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}")
	}
}

group = 'com.boasaude'
version = 'latest'
sourceCompatibility = '11'

apply plugin: 'com.diffplug.spotless'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.cloud:spring-cloud-starter-stream-rabbit'
	implementation 'org.springdoc:springdoc-openapi-webflux-core:1.4.3'
	implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.4.3'
	implementation 'org.glassfish.web:javax.el:2.2.6'
	implementation 'javax.el:javax.el-api:3.0.0'
	implementation 'org.hibernate:hibernate-validator:6.1.0.Final'
	implementation 'org.apache.commons:commons-lang3:3.10'
	implementation 'junit:junit:4.13.1'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.cloud:spring-cloud-stream-test-support'
}

repositories {

	mavenCentral()
}

test {
	useJUnitPlatform()
}

spotless {
	format 'misc', {
		target '**/*.gradle', '**/*.md', '**/.gitignore', '**/*.yml', '**/*.yaml'
		trimTrailingWhitespace()
		endWithNewline()
	}
	java {
		importOrderFile 'spotless/spotless.importorder'
		removeUnusedImports()
		eclipse().configFile 'spotless/spotless.eclipse-fmt.xml'
		custom 'Lambda fix', { it.replace('} )', '})').replace('} ,', '},') }
	}
}
